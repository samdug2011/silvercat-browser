QMainWindow {
    border: orange;
    border-radius: 5%;
    color : orange;
    background-color: qlineargradient(x1:0, y1:0, x2:1, y2:0,
    stop:0 black,stop:1 orange);
    margin: 0;
    padding: 0;
}
Tab, BrowserTab {
    padding: 0;
    margin: 0;
}
QTabWidget::tab-bar {
    left: 5px; /* move to the right by 5px */
    background: transparent;
}
QScrollBar::groove:horizontal{
    background: white;
    height: 17px;
}
QScrollBar::sub-page:horizontal,QScrollBar::add-page:horizontal  {
    height: 10px;
    background: rgb(255, 255, 255);
}
QScrollBar::handle:horizontal {
    margin-right: -5px;
    background: rgb(0,115,170);
}
QScrollBar::handle:horizontal:hover {
    background: rgb(0,115,170);
}
QScrollBar:vertical {
    background: white;
    width: 15px;
    margin: 22px 0 22px 0;
}
QScrollBar::handle:vertical {
    background: rgb(0,115,170);
    min-height: 20px;
}
QScrollBar::up-arrow:vertical {
    image: url(assets/UI/Icons/interface_icons/arrow_up.png);
    width: 10px;
    height: 10px;
}
QScrollBar::down-arrow:vertical {
    image: url(assets/UI/Icons/interface_icons/arrow_down.png);
    width: 10px;
    height: 10px;
}
QScrollBar::sub-line:vertical {
    background: rgb(0,115,170);
    height: 20px;
    subcontrol-position: top;
    subcontrol-origin: margin;
}
QScrollBar::add-line:vertical {
    background: rgb(0,115,170);
    height: 20px;
    subcontrol-position: bottom;
    subcontrol-origin: margin;
}
QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
    background: none;
}

/* Style the tab using the tab sub-control. Note that
    it reads QTabBar _not_ QTabWidget */
QTabBar::tab {
    background: rgba(0, 0, 0, 0.5);
    border-bottom: none; /* same as the pane color */
    min-width: 10ex;
    padding: 5px;
    color: orange;
}
QTabBar::tab:hover {
    border-top: 2px solid white;
}
QTabBar::tab:selected {
    border-top: 2px solid white;
    background: rgba(255, 255, 255, 0.1);
    border-bottom: none;
}
QTabBar::tab:first:!selected {
    border-left: none;
}

QTabBar::tab:last:!selected {
    border-right: none;
}
QToolBar {
    background: transparent;
    spacing: 3px;
    border: 1px solid orange;
}
QToolButton {
    background-color: transparent;
    color: black;
    padding: 5px;
}
QToolButton:hover {
    background: rgba(0, 0, 139, 0.5);
}
QToolButton#add_new_tab {
    color: white;
    width: 40px;
}
QToolButton#add_new_tab:hover {
    background: rgba(0, 0, 139, 0.5);
    color: orange;
}
QToolTip {
    border: 1px solid white;
    padding: 5px;
    background-color: orange;
}
QLineEdit {
    border: none;
    background: transparent;
    color: white;
}
QStatusBar {
    background: transparent;
    color: orange;
    border: 2px solid orange;
}
QLabel {
    color: white;
}
QProgressBar {
    border: 2px solid grey;
    border-radius: 5px;
    color: orange;
    text-align: center;
    height: 20px;
}

QProgressBar::chunk {
    background-color: black;
    width: 20px;
}
QToolButton QMenu {
    background-color: qlineargradient(x1:0, y1:0, x2:1, y2:0,
    stop:0 black,stop:1 orange); /* sets background of the menu */
    border: 1px solid black;
    color: white;
}

QToolButton QMenu::item {
    /* sets background of menu item. set this to something non-transparent
        if you want menu color and menu item color to be different */
    background-color: transparent;
}

QToolButton QMenu::item:selected { /* when user selects item using mouse or keyboard */
    background-color: rgba(0, 0, 139, 0.5);
}
QDockWidget {
    border: 1px solid white;
    background-color: black;
}

QDockWidget::title {
    color: white;
    text-align: center; /* align the text to the left */
    background-color: orange;
}

QDockWidget::close-button, QDockWidget::float-button {
    border: 1px solid transparent;
    background: transparent;
    padding: 0px;
    icon-size: 14px; /* maximum icon size */
}

QDockWidget::close-button:hover, QDockWidget::float-button:hover {
    background: gray;
}

QDockWidget::close-button:pressed, QDockWidget::float-button:pressed {
    padding: 1px -1px -1px 1px;
}